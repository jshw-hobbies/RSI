# There was an attempt (is bad)

from matplotlib import dates
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import yfinance as yf
import os

# Define exact start and end dates for consistency (e.g., 2010-01-01 to 2019-12-31)
start_date = '2010-01-01'
end_date = '2024-10-11'

# Download data
BA = yf.download('BA', start=start_date, end=end_date, interval="1d")

# Calculate 'Gain' & 'Loss'

BA['Close_prev'] = BA['Close'].shift(1)

BA['Gain']=np.where(
        BA['Close'] > BA['Close_prev'],
        BA['Close'] - BA['Close_prev'],
        0)
BA['Loss']=np.where(
        BA['Close'] < BA['Close_prev'],
        BA['Close_prev'] - BA['Close'],
        0)

BA['Gain'] = BA['Gain'].fillna(0)
BA['Loss'] = BA['Loss'].fillna(0)

# Initialize 'Avg_Gain' with rolling mean for the first 14 days
BA['Avg_Gain'] = BA['Gain'].rolling(window=14, min_periods=14).mean()

# Iterate over the DataFrame to apply the recursive formula after the first 14 rows
for i in range(14, len(BA)):
    BA.at[BA.index[i], 'Avg_Gain'] = (
        BA.at[BA.index[i-1], 'Avg_Gain'] * 13 + BA.at[BA.index[i], 'Gain']
    ) / 14

    
# Initialize 'Avg_Loss' with rolling mean for the first 14 days
BA['Avg_Loss'] = BA['Loss'].rolling(window=14, min_periods=14).mean()

# Iterate over the DataFrame to apply the recursive formula after the first 14 rows
for i in range(14, len(BA)):
    BA.at[BA.index[i], 'Avg_Loss'] = (
        BA.at[BA.index[i-1], 'Avg_Loss'] * 13 + BA.at[BA.index[i], 'Loss']
    ) / 14

#Completing the RSI calcualtion

BA['RS'] = BA['Avg_Gain'] / BA['Avg_Loss']
BA['14DRSI'] = 100 - (100/(1+BA['RS']))

#Create an Export Directory if Not Exists
export_dir = 'exports'
os.makedirs(export_dir, exist_ok=True)

#Export to Excel
excel_path = os.path.join(export_dir, 'Boeing_RSI.xlsx')
BA.to_excel(excel_path, index=True, engine='openpyxl')

print(f"DataFrame successfully exported to {excel_path}")
